global
  maxconn 4096
  pidfile ~/tmp/haproxy-queue.pid

defaults
  log global
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  mode http
  timeout connect 300000
  timeout client 300000
  timeout server 300000
  maxconn 2000
  option redispatch
  retries 3
  option httpclose
  option httplog
  option forwardfor
  option http-server-close
  option httpchk HEAD / HTTP/1.0

frontend http-farm
  bind *:9000

  #Reducing network traffic by compressing communication between client and HAProxy
  compression algo gzip
  compression type text/html text/plain text/javascript application/javascript application/xml text/css

  #Add the 4 backup servers if there is a failure in the mainPool
  acl mainPool_failover nbsrv(main_pool) le 3
  use_backend loadBoost_pool if mainPool_failover

  #Use the mainPool + backupPool of 8 flask servers when the session rate becomes very high
  acl mainPool_stressed fe_sess_rate gt 3
  use_backend loadBoost_pool if mainPool_stressed

  #Use the mainPool of 4 flask servers when the session rate drops
  acl mainPool_lowDemand fe_sess_rate lt 1
  use_backend main_pool if mainPool_lowDemand

  default_backend main_pool

backend main_pool
  mode http
  stats enable
  stats auth test:test
  option forwardfor
  option httpclose
  balance url_param location check_post 64
  server web01 0.0.0.0:5001 check
  server web02 0.0.0.0:5002 check
  server web03 0.0.0.0:5003 check
  server web04 0.0.0.0:5004 check

backend loadBoost_pool
   option allbackups
   mode http
   stats enable
   stats auth test:test
   option forwardfor
   option httpclose
   balance roundrobin
   server web01 0.0.0.0:5001 check
   server web02 0.0.0.0:5002 check
   server web03 0.0.0.0:5003 check
   server web04 0.0.0.0:5004 check
   server web05 0.0.0.0:5005 check
   server web06 0.0.0.0:5006 check
   server web07 0.0.0.0:5007 check
   server web08 0.0.0.0:5008 check
